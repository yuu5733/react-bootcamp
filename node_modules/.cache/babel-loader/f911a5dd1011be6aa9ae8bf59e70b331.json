{"ast":null,"code":"var _jsxFileName = \"/Users/yuhyuh/React_work/reactbootcamp/src/pages/Upload/VideoSelector/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, CardMedia } from \"@material-ui/core\"; // useStateとChangeEventを追記\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoSelect = () => {\n  _s();\n\n  // 選択されたファイルを保持します。\n  const [file, setFile] = useState(); // 動画表示用のURLを格納\n\n  const [videoURL, setVideoURL] = useState(); // サムネイルの画像URLを格納する配列state\n\n  const [thumbnailURLs, setThumbnailURLs] = useState([]); // サムネイルを生成する関数\n\n  const createThumbnail = videoRefURL => {\n    // canvasタグを使って、<video>のビューを転写する\n    const video = document.createElement(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\"); // <video>の動画の読み込みが終わったら、<canvas>に<video>と同じサイズにリサイズ\n\n    video.onloadeddata = () => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      video.currentTime = 0;\n    }; // シーク操作が完了し、現在の再生位置が変更された(onseeked)\n    // video.currentTime が動画の最後になるまで繰り返す\n\n\n    video.onseeked = () => {\n      // メディアの長さを秒単位\n      if (video.currentTime >= video.duration || !context) return; // <video>のビューを<canvas>に転写\n\n      context.drawImage(video, 0, 0); // prevs: 保存済みのstateの値（配列）\n      // [...prev,canvas.toDataURL(\"image/jpeg\")]\n      // →以前のstateを値を保ちつつ、新しい値を配列に挿入している\n      // イメージとしては、array.append(value)\n      // 詳しくは：https://zenn.dev/gunners6518/articles/4c06488cfa402e\n\n      setThumbnailURLs(prevs => [...prevs, canvas.toDataURL(\"image/jpeg\")]);\n      video.currentTime += Math.ceil(video.duration / 3);\n    }; // 動画の読み込み\n\n\n    video.src = videoRefURL;\n    video.load();\n  }; // 「ファイルを選択」したあとに、選択されたファイルを上記のfileに代入する処理\n\n\n  const selectedFile = event => {\n    var _event$currentTarget$;\n\n    if ((_event$currentTarget$ = event.currentTarget.files) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.length) {\n      setFile(event.currentTarget.files[0]);\n    }\n  };\n\n  const inputRef = useRef(null);\n\n  const handleClick = () => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n  };\n\n  useEffect(() => {\n    if (file) {\n      setVideoURL(URL.createObjectURL(file));\n    }\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [videoURL && /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"video\",\n      src: videoURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      hidden: true,\n      ref: inputRef,\n      onChange: selectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), file === null || file === void 0 ? void 0 : file.name, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoSelect, \"RRGLnC1sKHR2MZTHWo8T7I9coew=\");\n\n_c = VideoSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSelect\");","map":{"version":3,"sources":["/Users/yuhyuh/React_work/reactbootcamp/src/pages/Upload/VideoSelector/index.tsx"],"names":["Button","CardMedia","useState","useRef","useEffect","VideoSelect","file","setFile","videoURL","setVideoURL","thumbnailURLs","setThumbnailURLs","createThumbnail","videoRefURL","video","document","createElement","canvas","context","getContext","onloadeddata","width","videoWidth","height","videoHeight","currentTime","onseeked","duration","drawImage","prevs","toDataURL","Math","ceil","src","load","selectedFile","event","currentTarget","files","length","inputRef","handleClick","current","click","URL","createObjectURL","name"],"mappings":"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","sourcesContent":["import { Button, CardMedia } from \"@material-ui/core\";\n// useStateとChangeEventを追記\nimport { useState, useRef, ChangeEvent, useEffect} from \"react\";\n\nexport const VideoSelect = () => {\n  // 選択されたファイルを保持します。\n  const [file, setFile] = useState<File>();\n  // 動画表示用のURLを格納\n  const [videoURL, setVideoURL] = useState<string>();\n  // サムネイルの画像URLを格納する配列state\n  const [thumbnailURLs, setThumbnailURLs] = useState<string[]>([]);\n\n  // サムネイルを生成する関数\n  const createThumbnail = (videoRefURL: string) => {\n    // canvasタグを使って、<video>のビューを転写する\n    const video = document.createElement(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n\n\n    // <video>の動画の読み込みが終わったら、<canvas>に<video>と同じサイズにリサイズ\n    video.onloadeddata = () => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      video.currentTime = 0;\n    };\n\n    // シーク操作が完了し、現在の再生位置が変更された(onseeked)\n    // video.currentTime が動画の最後になるまで繰り返す\n    video.onseeked = () => {\n      // メディアの長さを秒単位\n      if (video.currentTime >= video.duration || !context) return;\n\n      // <video>のビューを<canvas>に転写\n      context.drawImage(video, 0, 0);\n\n      // prevs: 保存済みのstateの値（配列）\n      // [...prev,canvas.toDataURL(\"image/jpeg\")]\n      // →以前のstateを値を保ちつつ、新しい値を配列に挿入している\n      // イメージとしては、array.append(value)\n      // 詳しくは：https://zenn.dev/gunners6518/articles/4c06488cfa402e\n      setThumbnailURLs((prevs) => [...prevs, canvas.toDataURL(\"image/jpeg\")]);\n      video.currentTime += Math.ceil(video.duration / 3);\n    };\n\n    // 動画の読み込み\n    video.src = videoRefURL;\n    video.load();\n  };\n\n  // 「ファイルを選択」したあとに、選択されたファイルを上記のfileに代入する処理\n  const selectedFile = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files?.length) {\n      setFile(event.currentTarget.files[0]);\n    }\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleClick = () => {\n    inputRef.current?.click();\n  };\n\n  useEffect(() => {\n    if (file) {\n      setVideoURL(URL.createObjectURL(file));\n    }\n  }, [file]);\n\n  return (\n    <div>\n        {videoURL && <CardMedia component=\"video\" src={videoURL} controls />}\n        <input type=\"file\" hidden ref={inputRef} onChange={selectedFile} />\n          {file?.name}\n        <Button onClick={handleClick}>ファイルを選択</Button>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}